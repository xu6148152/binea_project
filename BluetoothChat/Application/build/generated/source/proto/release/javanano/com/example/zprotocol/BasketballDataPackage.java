// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.example.zprotocol;

@SuppressWarnings("hiding")
public interface BasketballDataPackage {

  public static final class Header extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Header[] _emptyArray;
    public static Header[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Header[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string prefix = 1;
    public java.lang.String prefix;

    // required bytes version = 2;
    public byte[] version;

    // required bytes messageType = 3;
    public byte[] messageType;

    // required bytes timeStamps = 4;
    public byte[] timeStamps;

    // required bytes crc16 = 5;
    public byte[] crc16;

    // required bytes bodyLength = 6;
    public byte[] bodyLength;

    public Header() {
      clear();
    }

    public Header clear() {
      prefix = "";
      version = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      messageType = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      timeStamps = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      crc16 = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      bodyLength = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.prefix);
      output.writeBytes(2, this.version);
      output.writeBytes(3, this.messageType);
      output.writeBytes(4, this.timeStamps);
      output.writeBytes(5, this.crc16);
      output.writeBytes(6, this.bodyLength);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.prefix);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(2, this.version);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(3, this.messageType);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(4, this.timeStamps);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(5, this.crc16);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(6, this.bodyLength);
      return size;
    }

    @Override
    public Header mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.prefix = input.readString();
            break;
          }
          case 18: {
            this.version = input.readBytes();
            break;
          }
          case 26: {
            this.messageType = input.readBytes();
            break;
          }
          case 34: {
            this.timeStamps = input.readBytes();
            break;
          }
          case 42: {
            this.crc16 = input.readBytes();
            break;
          }
          case 50: {
            this.bodyLength = input.readBytes();
            break;
          }
        }
      }
    }

    public static Header parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Header(), data);
    }

    public static Header parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Header().mergeFrom(input);
    }
  }

  public static final class Body extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Body[] _emptyArray;
    public static Body[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Body[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .smartbasket.BallEventCommon commonBody = 2;
    public com.example.zprotocol.BasketballDataPackage.BallEventCommon commonBody;

    // optional .smartbasket.BallEventBallState ballState = 3;
    public com.example.zprotocol.BasketballDataPackage.BallEventBallState ballState;

    // optional .smartbasket.BallEventResult ballResult = 4;
    public com.example.zprotocol.BasketballDataPackage.BallEventResult ballResult;

    public Body() {
      clear();
    }

    public Body clear() {
      commonBody = null;
      ballState = null;
      ballResult = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.commonBody != null) {
        output.writeMessage(2, this.commonBody);
      }
      if (this.ballState != null) {
        output.writeMessage(3, this.ballState);
      }
      if (this.ballResult != null) {
        output.writeMessage(4, this.ballResult);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.commonBody != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.commonBody);
      }
      if (this.ballState != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.ballState);
      }
      if (this.ballResult != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.ballResult);
      }
      return size;
    }

    @Override
    public Body mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 18: {
            if (this.commonBody == null) {
              this.commonBody = new com.example.zprotocol.BasketballDataPackage.BallEventCommon();
            }
            input.readMessage(this.commonBody);
            break;
          }
          case 26: {
            if (this.ballState == null) {
              this.ballState = new com.example.zprotocol.BasketballDataPackage.BallEventBallState();
            }
            input.readMessage(this.ballState);
            break;
          }
          case 34: {
            if (this.ballResult == null) {
              this.ballResult = new com.example.zprotocol.BasketballDataPackage.BallEventResult();
            }
            input.readMessage(this.ballResult);
            break;
          }
        }
      }
    }

    public static Body parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Body(), data);
    }

    public static Body parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Body().mergeFrom(input);
    }
  }

  public static final class BallEventBallState extends
      com.google.protobuf.nano.MessageNano {

    private static volatile BallEventBallState[] _emptyArray;
    public static BallEventBallState[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BallEventBallState[0];
          }
        }
      }
      return _emptyArray;
    }

    // required bytes ballNameLength = 1;
    public byte[] ballNameLength;

    // required bytes ballNameString = 2;
    public byte[] ballNameString;

    public BallEventBallState() {
      clear();
    }

    public BallEventBallState clear() {
      ballNameLength = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      ballNameString = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeBytes(1, this.ballNameLength);
      output.writeBytes(2, this.ballNameString);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(1, this.ballNameLength);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(2, this.ballNameString);
      return size;
    }

    @Override
    public BallEventBallState mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.ballNameLength = input.readBytes();
            break;
          }
          case 18: {
            this.ballNameString = input.readBytes();
            break;
          }
        }
      }
    }

    public static BallEventBallState parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BallEventBallState(), data);
    }

    public static BallEventBallState parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BallEventBallState().mergeFrom(input);
    }
  }

  public static final class BallEventCommon extends
      com.google.protobuf.nano.MessageNano {

    private static volatile BallEventCommon[] _emptyArray;
    public static BallEventCommon[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BallEventCommon[0];
          }
        }
      }
      return _emptyArray;
    }

    // required bytes eventType = 1;
    public byte[] eventType;

    // required bytes reserve = 2;
    public byte[] reserve;

    // required bytes ballMac = 3;
    public byte[] ballMac;

    // required bytes controllerMac = 4;
    public byte[] controllerMac;

    public BallEventCommon() {
      clear();
    }

    public BallEventCommon clear() {
      eventType = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      reserve = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      ballMac = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      controllerMac = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeBytes(1, this.eventType);
      output.writeBytes(2, this.reserve);
      output.writeBytes(3, this.ballMac);
      output.writeBytes(4, this.controllerMac);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(1, this.eventType);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(2, this.reserve);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(3, this.ballMac);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(4, this.controllerMac);
      return size;
    }

    @Override
    public BallEventCommon mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.eventType = input.readBytes();
            break;
          }
          case 18: {
            this.reserve = input.readBytes();
            break;
          }
          case 26: {
            this.ballMac = input.readBytes();
            break;
          }
          case 34: {
            this.controllerMac = input.readBytes();
            break;
          }
        }
      }
    }

    public static BallEventCommon parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BallEventCommon(), data);
    }

    public static BallEventCommon parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BallEventCommon().mergeFrom(input);
    }
  }

  public static final class BallEventResult extends
      com.google.protobuf.nano.MessageNano {

    private static volatile BallEventResult[] _emptyArray;
    public static BallEventResult[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BallEventResult[0];
          }
        }
      }
      return _emptyArray;
    }

    // required float speed = 1;
    public float speed;

    // required float arc = 2;
    public float arc;

    // required float spin = 3;
    public float spin;

    // required float spinRate = 4;
    public float spinRate;

    // required bytes made = 5;
    public byte[] made;

    // required bytes reserve = 6;
    public byte[] reserve;

    public BallEventResult() {
      clear();
    }

    public BallEventResult clear() {
      speed = 0F;
      arc = 0F;
      spin = 0F;
      spinRate = 0F;
      made = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      reserve = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeFloat(1, this.speed);
      output.writeFloat(2, this.arc);
      output.writeFloat(3, this.spin);
      output.writeFloat(4, this.spinRate);
      output.writeBytes(5, this.made);
      output.writeBytes(6, this.reserve);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(1, this.speed);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(2, this.arc);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(3, this.spin);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeFloatSize(4, this.spinRate);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(5, this.made);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeBytesSize(6, this.reserve);
      return size;
    }

    @Override
    public BallEventResult mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.speed = input.readFloat();
            break;
          }
          case 21: {
            this.arc = input.readFloat();
            break;
          }
          case 29: {
            this.spin = input.readFloat();
            break;
          }
          case 37: {
            this.spinRate = input.readFloat();
            break;
          }
          case 42: {
            this.made = input.readBytes();
            break;
          }
          case 50: {
            this.reserve = input.readBytes();
            break;
          }
        }
      }
    }

    public static BallEventResult parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BallEventResult(), data);
    }

    public static BallEventResult parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BallEventResult().mergeFrom(input);
    }
  }

  public static final class BasketballProtocol extends
      com.google.protobuf.nano.MessageNano {

    private static volatile BasketballProtocol[] _emptyArray;
    public static BasketballProtocol[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BasketballProtocol[0];
          }
        }
      }
      return _emptyArray;
    }

    // required .smartbasket.Header header = 1;
    public com.example.zprotocol.BasketballDataPackage.Header header;

    // required .smartbasket.Body body = 2;
    public com.example.zprotocol.BasketballDataPackage.Body body;

    public BasketballProtocol() {
      clear();
    }

    public BasketballProtocol clear() {
      header = null;
      body = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.header != null) {
        output.writeMessage(1, this.header);
      }
      if (this.body != null) {
        output.writeMessage(2, this.body);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.header != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.header);
      }
      if (this.body != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.body);
      }
      return size;
    }

    @Override
    public BasketballProtocol mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.header == null) {
              this.header = new com.example.zprotocol.BasketballDataPackage.Header();
            }
            input.readMessage(this.header);
            break;
          }
          case 18: {
            if (this.body == null) {
              this.body = new com.example.zprotocol.BasketballDataPackage.Body();
            }
            input.readMessage(this.body);
            break;
          }
        }
      }
    }

    public static BasketballProtocol parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BasketballProtocol(), data);
    }

    public static BasketballProtocol parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BasketballProtocol().mergeFrom(input);
    }
  }
}
